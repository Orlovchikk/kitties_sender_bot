const { Composer } = require("telegraf")
const composer = new Composer
const commands = require('../text')
const db = require('../mongoDB')

composer.start(async (ctx) => {
  try {
    let kitten = Number(ctx.message.text.slice(7)),
      user = ctx.message.from

    await ctx.reply(
      `–ø—Ä–∏–≤–µ—Ç –∫–æ—Ç–∏–∫ ü•∞
    \n/pic —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
    \n/gif —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥–∏—Ñ–∫—É —Å –∫–æ—Ç–∏–∫–æ–º
    \n/kitten - –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫–æ—Ç–∏–∫–∞ –∏ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –µ–º—É –∫–∞—Ä—Ç–∏–Ω–æ—á–∫–∏
    \n/help —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã`
    )
    if (kitten) {
      if (ctx.message.from.id !== kitten) {
        try {
          if (await db.user(user.id)) {
            await db.deleteKitten(user.id)
            await db.deleteKitten(kitten)
            await db.updateKitten(kitten, user.id)
            await db.updateKitten(user.id, kitten)
          }
          else {
            await db.deleteKitten(kitten)
            await db.addUserToDB(user.id, user.username, kitten)
            await db.updateKitten(kitten, user.id)
          }
          ctx.telegram.sendMessage(kitten, `–∫–æ—Ç–∏–∫ –ø—Ä–∏–≤—è–∑–∞–Ω!\n–º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /send_to_kitten`)
          ctx.reply(`—Ç–µ–±—è –ø—Ä–∏–≤—è–∑–∞–ª–∏!\n–º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–º—É –∫–æ—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /send_to_kitten`)
        } catch (e) {
          console.error(e)
        }
      } else {
        ctx.reply('—Ç—ã –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è :(')
      }
    } else if (! await db.user(user.id)) {
      db.addUserToDB(user.id, user.username)
    } 
  } catch (e) {
    console.error(e)
  }
})

composer.help((ctx) => {
  try {
    ctx.reply(`–≤–æ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n${text.commands} —Ç–∞–∫ –∂–µ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–≤–∞—Ç—å –∫–æ—Ç–∏–∫–∞ –ø–æ –∫–∏—Å –∫–∏—Å ü§≠`)
  } catch (e) {
    console.error(e)
  }
})

module.exports = composer