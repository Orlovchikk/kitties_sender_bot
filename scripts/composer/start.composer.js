const { Composer } = require("telegraf");
const composer = new Composer();
const db = require("../database.js");
const text = require("../text.json");

composer.start(async (ctx) => {
  try {
    const kitten = Number(ctx.message.text.slice(7)),
      user = ctx.message.from;
    await ctx.reply(text.start);
    if (kitten) {
      if (ctx.message.from.id !== kitten) {
        const userDB = await db.user(user.id);
        if (userDB) {
          await db.updateKitten(user.id, kitten);
        } else {
          await db.addUserToDB(user.id, user.username, kitten);
          await db.updateKitten(kitten, user.id);
        }
        const kittenUsername = await db.user(kitten);
        ctx.telegram.sendMessage(
          kitten,
          `—Ç–µ–ø–µ—Ä—å –≤—ã —Å @${user.username} —Å–≤—è–∑–∞–Ω—ã!\n–º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–º—É –∫–æ—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /send_to_kitten`
        );
        ctx.reply(
          `—Ç–µ–ø–µ—Ä—å –≤—ã —Å @${kittenUsername["username"]} —Å–≤—è–∑–∞–Ω—ã!\n–º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–º—É –∫–æ—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /send_to_kitten`
        );
      } else {
        ctx.reply(text.kittenError);
      }
    } else if (!(await db.user(user.id))) {
      db.addUserToDB(user.id, user.username);
    }
  } catch (e) {
    console.error(e);
  }
});

composer.help((ctx) => {
  try {
    ctx.replyWithHTML(
      `–≤–æ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n${text.commands} —Ç–∞–∫ –∂–µ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–≤–∞—Ç—å –∫–æ—Ç–∏–∫–∞ –ø–æ –∫–∏—Å –∫–∏—Å ü§≠`
    );
  } catch (e) {
    console.error(e);
  }
});

module.exports = composer;
